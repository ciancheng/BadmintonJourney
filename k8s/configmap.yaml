apiVersion: v1
kind: ConfigMap
metadata:
  name: badminton-app-config
  namespace: badminton-journey
  labels:
    app.kubernetes.io/name: badminton-journey
    app.kubernetes.io/component: config
data:
  # 数据库配置
  DB_HOST: "mysql-service"
  DB_PORT: "3306"
  DB_NAME: "badminton_journey"
  
  # 应用配置
  SPRING_PROFILES_ACTIVE: "k8s"
  SERVER_PORT: "8080"
  
  # JVM配置
  JAVA_OPTS: "-Xmx1024m -Xms512m -XX:+UseG1GC -XX:+UseStringDeduplication"
  
  # 日志配置
  LOG_LEVEL: "INFO"
  
  # 文件上传配置
  MAX_FILE_SIZE: "1024MB"
  UPLOAD_DIR: "/app/uploads"
  
  # CORS配置
  ALLOWED_ORIGINS: "http://localhost,https://*.badminton-journey.com"
  
  # Redis配置
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: badminton-journey
  labels:
    app.kubernetes.io/name: badminton-journey
    app.kubernetes.io/component: frontend
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        # Gzip压缩
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;
        
        # 日志格式
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log;
        
        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;
            
            # 前端静态文件
            location / {
                try_files $uri $uri/ /index.html;
                
                # 缓存策略
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
            }
            
            # API代理到后端
            location /api/ {
                proxy_pass http://backend-service:8080/api/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                
                # 超时设置
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
                
                # 文件上传大小限制
                client_max_body_size 1024M;
            }
            
            # 健康检查
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # 错误页面
            error_page 404 /index.html;
            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /usr/share/nginx/html;
            }
        }
    } 